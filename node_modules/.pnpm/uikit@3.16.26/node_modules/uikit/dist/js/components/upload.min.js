/*! UIkit 3.16.26 | https://www.getuikit.com | (c) 2014 - 2023 YOOtheme | MIT License */(function(o,i){typeof exports=="object"&&typeof module<"u"?module.exports=i(require("uikit-util")):typeof define=="function"&&define.amd?define("uikitupload",["uikit-util"],i):(o=typeof globalThis<"u"?globalThis:o||self,o.UIkitUpload=i(o.UIkit.util))})(this,function(o){"use strict";var i={props:{i18n:Object},data:{i18n:null},methods:{t(e,...t){var s,r,n;let a=0;return((n=((s=this.i18n)==null?void 0:s[e])||((r=this.$options.i18n)==null?void 0:r[e]))==null?void 0:n.replace(/%s/g,()=>t[a++]||""))||""}}},h={mixins:[i],i18n:{invalidMime:"Invalid File Type: %s",invalidName:"Invalid File Name: %s",invalidSize:"Invalid File Size: %s Kilobytes Max"},props:{allow:String,clsDragover:String,concurrent:Number,maxSize:Number,method:String,mime:String,multiple:Boolean,name:String,params:Object,type:String,url:String},data:{allow:!1,clsDragover:"uk-dragover",concurrent:1,maxSize:0,method:"POST",mime:!1,multiple:!1,name:"files[]",params:{},type:"",url:"",abort:o.noop,beforeAll:o.noop,beforeSend:o.noop,complete:o.noop,completeAll:o.noop,error:o.noop,fail:o.noop,load:o.noop,loadEnd:o.noop,loadStart:o.noop,progress:o.noop},events:{change(e){o.matches(e.target,'input[type="file"]')&&(e.preventDefault(),e.target.files&&this.upload(e.target.files),e.target.value="")},drop(e){p(e);const t=e.dataTransfer;t!=null&&t.files&&(o.removeClass(this.$el,this.clsDragover),this.upload(t.files))},dragenter(e){p(e)},dragover(e){p(e),o.addClass(this.$el,this.clsDragover)},dragleave(e){p(e),o.removeClass(this.$el,this.clsDragover)}},methods:{async upload(e){if(e=o.toArray(e),!e.length)return;o.trigger(this.$el,"upload",[e]);for(const s of e){if(this.maxSize&&this.maxSize*1e3<s.size){this.fail(this.t("invalidSize",this.maxSize));return}if(this.allow&&!d(this.allow,s.name)){this.fail(this.t("invalidName",this.allow));return}if(this.mime&&!d(this.mime,s.type)){this.fail(this.t("invalidMime",this.mime));return}}this.multiple||(e=e.slice(0,1)),this.beforeAll(this,e);const t=f(e,this.concurrent),a=async s=>{const r=new FormData;s.forEach(n=>r.append(this.name,n));for(const n in this.params)r.append(n,this.params[n]);try{const n=await u(this.url,{data:r,method:this.method,responseType:this.type,beforeSend:l=>{const{xhr:m}=l;o.on(m.upload,"progress",this.progress);for(const c of["loadStart","load","loadEnd","abort"])o.on(m,c.toLowerCase(),this[c]);return this.beforeSend(l)}});this.complete(n),t.length?await a(t.shift()):this.completeAll(n)}catch(n){this.error(n)}};await a(t.shift())}}};function d(e,t){return t.match(new RegExp(`^${e.replace(/\//g,"\\/").replace(/\*\*/g,"(\\/[^\\/]+)*").replace(/\*/g,"[^\\/]+").replace(/((?!\\))\?/g,"$1.")}$`,"i"))}function f(e,t){const a=[];for(let s=0;s<e.length;s+=t)a.push(e.slice(s,s+t));return a}function p(e){e.preventDefault(),e.stopPropagation()}function u(e,t){const a={data:null,method:"GET",headers:{},xhr:new XMLHttpRequest,beforeSend:o.noop,responseType:"",...t};return Promise.resolve().then(()=>a.beforeSend(a)).then(()=>g(e,a))}function g(e,t){return new Promise((a,s)=>{const{xhr:r}=t;for(const n in t)if(n in r)try{r[n]=t[n]}catch{}r.open(t.method.toUpperCase(),e);for(const n in t.headers)r.setRequestHeader(n,t.headers[n]);o.on(r,"load",()=>{r.status===0||r.status>=200&&r.status<300||r.status===304?a(r):s(o.assign(Error(r.statusText),{xhr:r,status:r.status}))}),o.on(r,"error",()=>s(o.assign(Error("Network Error"),{xhr:r}))),o.on(r,"timeout",()=>s(o.assign(Error("Network Timeout"),{xhr:r}))),r.send(t.data)})}return typeof window<"u"&&window.UIkit&&window.UIkit.component("upload",h),h});
